<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">


   
   <!-- 전체 사용자 수 조회 -->
   <select id="memberCnt" resultType="int">
      SELECT /*+ INDEX_FFS(MEMBER PK_MEMBER)*/ COUNT(*)
      FROM   MEMBER
   </select>
   
   <!-- 회원 등급 간의 수 조회 -->
   <select id="memberGradeCnt" resultType="int" parameterType="string">
   		select count(*)
		from member
		where mem_grade = #{mem_grade}
   </select>
   
   <!-- 일반회원 등록 -->
   <insert id="insertMember" parameterType="memberVo">
      INSERT INTO MEMBER(mem_id
      					,mem_nm
      					,mem_birth
      					,mem_gender
      					,mem_pass
      					,mem_phone
      					,mem_add1
      					,mem_add2
      					,mem_zipcd
      					,mem_mail
      					,mem_grade
      					,mem_del
      					,mem_photo_path
      					,mem_photo_nm
      					,pro_relation
      					,pro_nm
      					,pro_phone)
     			 VALUES (#{mem_id}
     			 		,#{mem_nm}
     			 		,#{mem_birth}
     			 		,#{mem_gender}
     			 		,#{mem_pass}
     			 		,#{mem_phone}
     			 		,#{mem_add1}
     			 		,#{mem_add2}
     			 		,#{mem_zipcd}
     			 		,#{mem_mail}
     			 		,'1'
     			 		,'N'
     			 		,#{mem_photo_path, jdbcType=VARCHAR}
     			 		,#{mem_photo_nm, jdbcType=VARCHAR}
     			 		,#{pro_relation}
     			 		,#{pro_nm}
     			 		,#{pro_phone})
   </insert>
  
   <!-- 일반회원 등록 - 질병명 -->
   <insert id="insertMemberDisease" parameterType="memberDiseaseVo">
   		INSERT INTO MEMBERDISEASE(dis_id, mem_dis_id, mem_id)
   					VALUES(#{dis_id}, mem_dis_id.nextval, #{mem_id})
   </insert>
   
   
   <!-- 요양보호사 등록 -->
   <insert id="insertCWMember" parameterType="memberVo">
      INSERT INTO MEMBER(mem_id
      					,mem_nm
      					,mem_birth
      					,mem_gender
      					,mem_pass
      					,mem_phone
      					,mem_add1
      					,mem_add2
      					,mem_zipcd
      					,mem_mail
      					,mem_grade
      					,mem_del
      					,mem_photo_path
      					,mem_photo_nm
      					,cw_driver
      					,cw_lic)
     			 VALUES (#{mem_id}
     			 		,#{mem_nm}
     			 		,#{mem_birth}
     			 		,#{mem_gender}
     			 		,#{mem_pass}
     			 		,#{mem_phone}
     			 		,#{mem_add1}
     			 		,#{mem_add2}
     			 		,#{mem_zipcd}
     			 		,#{mem_mail}
     			 		,'3'
     			 		,'N'
     			 		,#{mem_photo_path, jdbcType=VARCHAR}
     			 		,#{mem_photo_nm, jdbcType=VARCHAR}
     			 		,#{cw_driver}
     			 		,#{cw_lic})
   </insert>
   
   <!-- 요양보호사 등록 - 서비스 지역-->
   <insert id="insertLocation" parameterType="locationVo">
   		INSERT INTO LOCATION(loc_id, mem_id, loc_dong)
   					VALUES(loc_id.nextval, #{mem_id}, #{loc_dong})
   </insert>

   
   <!-- 요양보호사 등록 - 가능요일-->
   <insert id="insertDay" parameterType="dayVo">
   		INSERT INTO DAY(mem_id, cw_day)
   					VALUES(#{mem_id}, #{cw_day})
   </insert>
   
   <!-- 요양보호사 등록 - 경력 -->
   <insert id="insertCareer" parameterType="careerVo">
   		INSERT INTO CAREER(cw_career_id
   						  ,career_cont
   						  ,career_st_dt
   						  ,career_end_dt
   						  ,mem_id
   						  ,career_hos)
   					VALUES(cw_career_id.nextval
   						  ,#{career_cont}
   						  ,#{career_st_dt}
   						  ,#{career_end_dt}
   						  ,#{mem_id}
   						  ,#{career_hos})
   </insert>
   
	
   <!-- 요양보호사 등록 - 서비스 종류 -->
   <insert id="insertCWServiceType" parameterType="cwServiceTypeVo">
   		INSERT INTO CWSERVICETYPE(mem_id
   							   ,ser_type_id
   							   ,cw_ser_type_id)
   					VALUES(#{mem_id}
   					      ,#{ser_type_id}
   					      ,CW_SER_TYPE_ID.nextval)
   </insert>

   <!-- 아이디중복체크 -->
   <select id="idCheck" resultType="int" parameterType="String">
   		SELECT count(*) FROM member
   		where mem_id = #{mem_id}
   </select>
   
 

	<!-- 비밀번호 찾기 -->
	 <update id="passUpdate" parameterType="Map">
      UPDATE MEMBER
      SET   
            mem_pass=#{mem_pass}
           
      WHERE  mem_id = #{mem_id}
   </update> 
	

	 <!-- 아이디 찾기 조회 -->
   <select id="getMem_Id" resultType="String" parameterType="Map">
      SELECT mem_id
      FROM MEMBER
      WHERE mem_mail = #{mem_mail}
      AND mem_nm = #{mem_nm}
   </select>


	<!-- 전체 사용자 리스트 조회 하기 -->
	<select id="getMemList" resultType="memberVo">
		SELECT *
		FROM MEMBER
		ORDER BY mem_id
	</select>
	
	<!-- 전체 사용자 페이징 리스트 -->
	<select id="getAllMemberList" resultType="memberVo" parameterType="pageVo">
		<![CDATA[
		select *
		from
		(select a.*, rownum rn
		from
		(select a.*
		from member a
		order by mem_id asc) a)
		where rn >= (#{page}-1)*#{pageSize} + 1 and rn <= #{page}*#{pageSize}
 		]]> 
	</select>




	<!-- 특정 사용자 조회 -->
	<select id="getMemVo" resultType="memberVo" parameterType="String">
		SELECT *
		FROM MEMBER
		WHERE mem_id = #{mem_id}
	</select>





	<!-- 사용자 삭제 -->
	<delete id="deleteMem" parameterType="String">
		UPDATE MEMBER
		set mem_del =
		'Y'
		WHERE mem_id=#{mem_id}
	</delete>
	


	<update id="updateMem" parameterType="memberVo">
		UPDATE member
		SET
		mem_pass =
		#{mem_pass},
		mem_phone = #{mem_phone},
		mem_add1 = #{mem_add1},
		mem_add2 =
		#{mem_add2},
		mem_mail = #{mem_mail},
		mem_photo_path = #{mem_photo_path},
		mem_photo_nm = #{mem_photo_nm}
		WHERE mem_id = #{mem_id}
	</update>



   	<update id="updatePMember" parameterType="memberVo">
		UPDATE member
		SET
		mem_pass =
		#{mem_pass},
		mem_phone = #{mem_phone},
		mem_add1 = #{mem_add1},
		mem_add2 =
		#{mem_add2},
		mem_mail = #{mem_mail},
		mem_photo_path = #{mem_photo_path},
		mem_photo_nm = #{mem_photo_nm},
		pro_relation = #{pro_relation},
		pro_nm =
		#{pro_nm},
		pro_phone = #{pro_phone}
		WHERE mem_id = #{mem_id}
	</update>



   	<update id="withdrwalMember" parameterType="memberVo">
		UPDATE member
		SET
		mem_del = #{mem_del}
		WHERE mem_id = #{mem_id}
	</update>
	
<!-- 	요양보호사 리스트 조회	 -->
	<select id = "getCwList" resultType="memberVo">
		select * from member where mem_grade = '3' order by mem_id 
	</select>
	<select id = "getCwaddr" resultType="String">
		select Mem_add1 from member where mem_grade = '3' order by mem_id
	</select>
	<select id = "getCwList2" resultType="String">
		select MEM_ID, MEM_NM, MEM_ADD1 from member where mem_grade = '3' order by mem_id
	</select>
	
	
	
	<select id="getProfile" parameterType="String" resultType="String">
	select MEM_PHOTO_PATH from member where mem_id = #{mem_id}
	
	</select>





<!-- 골드회원으로 변경  -->
<update id="upgradeMemberStep1" parameterType="String">
		update member
		set
		mem_grade = '2'
		where mem_id = #{mem_id}
</update>

<insert id="upgradeMemberStep2" parameterType="String">
insert into gold
(mem_id, gold_st, gold_end, gold_del) values 
(#{mem_id},to_date(sysdate, 'yyyy-mm-dd'), to_date(sysdate+30, 'yyyy-mm-dd'), 'N')
</insert>


	<!-- 일반회원으로 변경 -->
	<!-- //골드회원에 가입한적이 있는 경우 업데이트한다 -->
	<update id="upgradeMemberStep3" parameterType="String">
		update gold
		set
		gold_st = to_date(sysdate, 'yyyy-mm-dd'),
		gold_end = to_date(sysdate+30, 'yyyy-mm-dd'),
		gold_del = 'N'
		where mem_id = #{mem_id}
	</update>





<!-- 프리미엄혜택이 끝나는 회원을 조회한다  -->
<select id="downGradeMemberStep1" resultType="String">
select mem_id    
from gold 
where  gold_end like sysdate and gold_del like 'N'
</select>




<!-- 프리미엄혜택이 끝나는 회원의 등급을 조정한다   -->
<update id="downGradeMemberStep2" parameterType="String">
		update member
		set mem_grade = '1'
		where mem_id = #{mem_id}
	</update>
	
	

<!-- 프리미엄혜택이 끝나는 회원의 gold서비스 이력을 조정한다  -->
<update id="downGradeMemberStep3" parameterType="String">
		update gold
		set gold_del = 'Y'
		where mem_id = #{mem_id}
</update>


<!--회원의 골드테이블 정보  -->
<select id="downGradeMember" resultType="goldVo">
select *
from gold 
where mem_id = #{mem_id}
</select>




</mapper>